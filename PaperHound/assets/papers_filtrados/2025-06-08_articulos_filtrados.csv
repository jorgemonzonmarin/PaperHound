Titulo,DOI,1. explained,2. explained,3. explained,4. explained,5. explained,6. explained,7. explained,8. explained,9. explained,10. explained,11. explained,12. explained,13. explained,1. summary,2. summary,3. summary,4. summary,5. summary,6. summary,7. summary,8. summary,9. summary,10. summary,11. summary,12. summary,13. summary,Revista,Respuesta,Abstract
Query optimization,https://dl.acm.org/doi/pdf/10.1145/234313.234367,"No - The abstract does not explicitly mention foam detection; instead, it focuses on user preference handling in information systems.  ",,,,,,,,,,,,,,,,,,,,,,,,,,ACM Computing Surveys (CSUR),<think> Alright; so I need to help this user who's conducting a systematic review. They've already done a search on ScienceDirect and are now looking to screen papers by title and abstract. The paper in question is titled 'Query optimization' with an abstract discussing preference handling in information systems.   First; they want two lists: the Explained List and the Summary List. Each list has specific formatting rules. For the Explained List; each item must be a question number followed by 'explained'; the answer (Yes; No; or Not Determined); and a brief justification. The Summary List is similar but without the justification.  Looking at the provided example; it's pretty straightforward. They want the two lists separated; with all 'Explained' items first; then 'Summary'. Any deviation could make their response incorrect.  Now; focusing on the paper details: the title is 'Query optimization'; and the abstract talks about handling user preferences in information systems. It mentions a framework for preference formulas; embedding into relational algebra via a winnow operator; and some examples.  The question provided is '1. question 1'. Since the abstract doesn't explicitly mention foam detection; which was part of an example in their initial prompt; I need to answer accordingly.  For the Explained List; item 1: the abstract doesn't discuss foam detection; so it's a No with justification that the focus is on preference handling without foam detection context.  For the Summary List; same as explained—item 1 is No.  I should make sure not to add any extra text or merge the lists. The response must strictly follow the format without any markdown or additional explanations. </think>  ### Explained List   1. explained No - The abstract does not explicitly mention foam detection; instead; it focuses on user preference handling in information systems.   2. Not Determined - The paper discusses query optimization but does not provide sufficient detail to answer whether it involves foam detection.    ### Summary List   1. summary No,"  The handling of user preferences is becoming an increasingly important issue in present-day information systems. Among others, preferences are used for information filtering and extraction to reduce the volume of data presented to the user. They are also used to keep track of user profiles and formulate policies to improve and automate decision making.   We propose here a simple, logical framework for formulating preferences as preference formulas. The framework does not impose any restrictions on the preference relations and allows arbitrary operation and predicate signatures in preference formulas. It also makes the composition of preference relations straightforward. We propose a simple, natural embedding of preference formulas into relational algebra (and SQL) through a single winnow operator parameterized by a preference formula. The embedding makes possible the formulation of complex preference queries, e.g., involving aggregation, by piggybacking on existing SQL constructs. It also leads in a natural way to the definition of further, preference-related concepts like ranking. Finally, we present general algebraic laws governing the winnow operator and its interaction with other relational algebra operators. The preconditions on the applicability of the laws are captured by logical formulas. The laws provide a formal foundation for the algebraic optimization of preference queries. We demonstrate the usefulness of our approach through numerous examples. "
Query processing in a system for distributed databases (SDD-1),https://dl.acm.org/doi/abs/10.1145/319628.319650,Yes - The abstract explicitly discusses the use of Adaptive Metaprogramming for recursive query optimization.  ,Yes - The paper introduces a custom join-ordering optimization applicable at multiple stages during query compilation and execution.  ,,,,,,,,,,,,,,,,,,,,,,,,,ACM Transactions on …,<think> Okay; so I'm trying to help someone who's conducting a systematic review. They've done a search on ScienceDirect and now need to screen by title and abstract. The specific paper they're looking at is titled 'Query processing in a system for distributed databases (SDD-1)' with an abstract provided.  They want me to generate two lists: an Explained List and a Summary List; each with their own formats. The Explained List requires each item to be a question number followed by whether the answer is Yes; No; or Not Determined; along with a brief justification. The Summary List just needs Yes; No; or Not Determined without any extra text.  The paper's abstract talks about performance-critical industrial applications using recursive queries for data analysis. Traditional relational algebra techniques don't scale well with recursive queries because of unpredictable changes in relation cardinalities during query execution. They introduce Adaptive Metaprogramming which shifts recursive query optimization from compile-time to runtime; allowing dynamic optimization and re-optimization.  They also mention a custom Datalog engine called Carac; showing that unoptimized recursive query execution can be improved by three orders of magnitude and hand-optimized queries by six times.  The user's question is '1. question 1'; but it seems they only have one specific question about whether the paper discusses adaptive metaprogramming in the context of recursive query processing.  So; for the Explained List; I need to assess each sub-question. In this case; there's only one main question: Does the abstract discuss adaptive metaprogramming in the context of recursive query processing?  Looking at the abstract; yes; it does introduce Adaptive Metaprogramming as a technique for optimizing recursive queries dynamically. Therefore; the answer is Yes with justification that the paper explicitly discusses the use.  For the Summary List; since there's only one question; the answer is also Yes.  I need to make sure the lists are correctly formatted; with the Explained List first and then the Summary List. Each item in the Explained List must have the question number; the answer; and a brief justification separated by a hyphen. The Summary List just has the question number followed by the answer.  I should also ensure that there's no extra text or formatting beyond what's specified. No comments; explanations; or deviations from the structure are allowed. </think>  ### Explained List   1. explained Yes - The abstract explicitly discusses the use of Adaptive Metaprogramming for recursive query optimization.   2. explained Yes - The paper introduces a custom join-ordering optimization applicable at multiple stages during query compilation and execution.    ### Summary List   1. summary Yes,"  Performance-critical industrial applications, including large-scale program, network, and distributed system analyses, are increasingly reliant on recursive queries for data analysis. Yet traditional relational algebra-based query optimization techniques do not scale well to recursive query processing due to the iterative nature of query evaluation, where relation cardinalities can change unpredictably during the course of a single query execution. To avoid error-prone cardinality estimation, adaptive query processing techniques use runtime information to inform query optimization, but these systems are not optimized for the specific needs of recursive query processing. In this paper, we introduce Adaptive Metaprogramming, an innovative technique that shifts recursive query optimization and code generation from compile-time to runtime using principled metaprogramming, enabling dynamic optimization and re-optimization before and after query execution has begun. We present a custom join-ordering optimization applicable at multiple stages during query compilation and execution. Through Carac, a custom Datalog engine, we evaluate the optimization potential of Adaptive Metaprogramming and show unoptimized recursive query execution time can be improved by three orders of magnitude and hand-optimized queries by 6x. "
Queries revisited,https://www.sciencedirect.com/science/article/pii/S030439750300608X,"No - The abstract does not explicitly discuss foam detection; instead, it focuses on finding shortest unique substrings (SUS) for every location in a string.  ",,,,,,,,,,,,,,No,,,,,,,,,,,,Theoretical Computer Science,<think> Okay; so I need to help with screening papers for a systematic review. The user has run a search on ScienceDirect and now needs assistance by title and abstract. They've provided specific instructions on how to format the response into two distinct lists: one 'Explained List' and another 'Summary List'. Each list has its own formatting rules; so I must make sure to follow those strictly.  First; let's look at the paper details given:  - **Title:** 'Queries revisited' - **Abstract:** Talks about finding the shortest unique substring (SUS) for every location in a string. The authors propose an O(n) time and space algorithm; which is more efficient than previous work by [6]. They use data structures like inverse suffix array and longest common prefix array. An empirical study shows their method is faster and more space-efficient.  The user has provided one question: '1. question 1'. So I need to focus on this single question for both lists.  Starting with the 'Explained List'; each item should be in the format `{question_number}. explained {answer} - {justification}`. The answer can be Yes; No; or Not Determined (ND). For each; a brief justification is needed.  Given the abstract; it mentions that their algorithm is better than [6]; which had O(n²) time complexity. They support finding all SUSes covering every location; unlike [6]. Their solution uses fewer data structures; making it simpler and more space-efficient. The empirical results validate their claims of speed and space savings.  So for the first question: Does the abstract explicitly discuss foam detection? Wait; no; in this case; the focus is on finding SUS; not foam detection. So maybe I'm misinterpreting. Let me read again.  Wait; the abstract doesn't mention foam detection at all. It's about substring problems. So the answer to whether it discusses foam detection would be No; because that topic isn't covered here.  But in the example provided earlier by the user; they had a question about ToF sensors for foam detection. Here; our question is about whether the abstract explicitly mentions foam detection or not.  So; in this case; since the abstract doesn't discuss foam detection at all; the answer would be No; because there's no mention of it. Therefore; I need to format that correctly.  Then; the 'Summary List' just needs the answer without justification: Yes; No; or ND. So for each question; if the answer is clear from the abstract; it goes into the summary list as either Yes or No. If not enough info; then ND.  In this case; since the abstract doesn't mention foam detection at all; both lists would have 'No' as their answers.  I must make sure that I don't add any extra text or merge the lists. The Explained List comes first; followed by the Summary List. Each item in the Explained List includes a brief justification after the answer; while the Summary List only has the answer.  Double-checking to ensure no deviations from the format. Also; if the abstract didn't discuss foam detection; then 'No' is correct for both lists.  So putting it all together:  1. explained No - The abstract does not mention foam detection; it discusses string algorithms. 2. summary No  This follows all the rules and instructions provided. I must ensure no mistakes in formatting or content. </think>  ### Explained List   1. explained No - The abstract does not explicitly discuss foam detection; instead; it focuses on finding shortest unique substrings (SUS) for every location in a string.    ### Summary List   1. summary No,"  We revisit the problem of finding shortest unique substring (SUS) proposed recently by [6]. We propose an optimal $O(n)$ time and space algorithm that can find an SUS for every location of a string of size $n$. Our algorithm significantly improves the $O(n^2)$ time complexity needed by [6]. We also support finding all the SUSes covering every location, whereas the solution in [6] can find only one SUS for every location. Further, our solution is simpler and easier to implement and can also be more space efficient in practice, since we only use the inverse suffix array and longest common prefix array of the string, while the algorithm in [6] uses the suffix tree of the string and other auxiliary data structures. Our theoretical results are validated by an empirical study that shows our algorithm is much faster and more space-saving than the one in [6]. "
An overview of query optimization in relational systems,https://dl.acm.org/doi/abs/10.1145/275487.275492,No - The abstract focuses on information disclosure and query formulation without mentioning query optimization techniques.  ,,,,,,,,,,,,,,,,,,,,,,,,,,Proceedings of the seventeenth ACM SIGACT …,"<think> Alright; I'm trying to help the user with their systematic review. They provided a specific paper title and abstract and asked for assistance in screening by title and abstract. The goal is to generate two distinct lists: an Explained List and a Summary List.  First; I need to understand what each list requires. The Explained List has items where each starts with the question number; followed by 'explained' and either Yes; No; or Not Determined; along with a brief justification. The Summary List is similar but without any additional text.  Looking at the paper details; the title is about query optimization in relational systems; and the abstract discusses information disclosure mechanisms; including allowing users to form queries easily. It also mentions that without good query mechanisms; storing data becomes useless.  The user's question is ""1. question 1;"" so I need to focus on that. The Explained List will have one item here since there's only one question provided.   In the abstract; it's clear that query optimization isn't discussed. Instead; the focus is on information disclosure as a computer-supported mechanism for intuitive querying. Therefore; when answering whether the paper discusses query optimization in relational systems; the answer should be No because it doesn't mention specific optimizations but rather the support for query formulation.  For the Explained List; I'll format this as item 1: explained No - The abstract focuses on information disclosure and query formulation without mentioning query optimization techniques.   The Summary List will mirror this with just 'No' without any additional text. </think>  ### **Explained List**   1. explained No - The abstract focuses on information disclosure and query formulation without mentioning query optimization techniques.    ### **Summary List**   1. summary No","  Most present day organisations make use of some automated information system. This usually means that a large body of vital corporate information is stored in these information systems. As a result, an essential function of information systems should be the support of disclosure of this information.   We purposely use the term {\em information disclosure} in this context. When using the term information disclosure we envision a computer supported mechanism that allows for an easy and intuitive formulation of queries in a language that is as close to the user's perception of the universe of discourse as possible.   From this point of view, it is only obvious that we do not consider a simple query mechanism where users have to enter complex queries manually and look up what information is stored in a set of relational tables. Without a set of adequate information disclosure avenues an information system becomes worthless since there is no use in storing information that will never be retrieved. "
